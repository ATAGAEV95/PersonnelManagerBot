from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

import app.keyboards as kb
import app.utils as ut
import app.requests as req
from app.handlers_persons import router as insert_router
from app.handlers_relationships import router as relationships_router
from app.handlers_marriages import router as marriages_router
from app.handlers_search import router as search_router
from app.handlers_delete import router as delete_router


router = Router()
router.include_router(insert_router)
router.include_router(relationships_router)
router.include_router(marriages_router)
router.include_router(search_router)
router.include_router(delete_router)
router.include_router(ut.router)


ACCESS_PASSWORD = '03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4'


class RegisterState(StatesGroup):
    waiting_for_password = State()


@router.message(CommandStart())
async def start_handler(message: Message, state: FSMContext):
    user_id = message.from_user.id
    user = await req.get_user_by_id(user_id)
    if user:
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.\n\n"
            "–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é:\n"
            "üîç –ü–æ–∏—Å–∫ - –ø–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–µ–ª–æ–≤–µ–∫–µ.\n"
            "üìù –í—Å—Ç–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø–µ—Ä—Å–æ–Ω—ã.\n"
            "üíç –°–æ–∑–¥–∞—Ç—å —Å–≤—è–∑–∏ –º—É–∂ - –∂–µ–Ω–∞ - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±—Ä–∞—á–Ω—ã—Ö —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –ø–µ—Ä—Å–æ–Ω–∞–º–∏.\n"
            "üë™ –°–æ–∑–¥–∞—Ç—å —Å–≤—è–∑–∏ —Ä–æ–¥–∏—Ç–µ–ª—å - —Ä–µ–±—ë–Ω–æ–∫ - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —á–ª–µ–Ω–∞–º–∏ —Å–µ–º—å–∏.\n"
            "üóë –£–¥–∞–ª–∏—Ç—å - —É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö.\n"
            "üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ - –æ—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏ —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è.\n",
            reply_markup=kb.main
        )
    else:
        await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞.')
        await state.set_state(RegisterState.waiting_for_password)


@router.message(RegisterState.waiting_for_password)
async def password_handler(message: Message, state: FSMContext):
    user_id = message.from_user.id
    if ut.hash_password(message.text.strip()) == ACCESS_PASSWORD:
        await req.add_user(user_id, message.from_user.username or '')
        await message.answer(
            "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø.\n\n"
            "–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é:\n"
            "üîç –ü–æ–∏—Å–∫ - –ø–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–µ–ª–æ–≤–µ–∫–µ.\n"
            "üìù –í—Å—Ç–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø–µ—Ä—Å–æ–Ω—ã.\n"
            "üíç –°–æ–∑–¥–∞—Ç—å —Å–≤—è–∑–∏ –º—É–∂ - –∂–µ–Ω–∞ - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±—Ä–∞—á–Ω—ã—Ö —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –ø–µ—Ä—Å–æ–Ω–∞–º–∏.\n"
            "üë™ –°–æ–∑–¥–∞—Ç—å —Å–≤—è–∑–∏ —Ä–æ–¥–∏—Ç–µ–ª—å - —Ä–µ–±—ë–Ω–æ–∫ - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —á–ª–µ–Ω–∞–º–∏ —Å–µ–º—å–∏.\n"
            "üóë –£–¥–∞–ª–∏—Ç—å - —É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö.\n"
            "üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ - –æ—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏ —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è.\n",
            reply_markup=kb.main
        )
        await state.clear()
    else:
        await message.answer('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:')


@router.message(F.text == '–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ')
async def reset_all(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã.")


@router.callback_query(F.data == '–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ')
async def reset_all_callback(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.answer("–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã.")
    await callback.answer()